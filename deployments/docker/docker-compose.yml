version: "3.8"

services:
  # 基础设施服务
  mysql:
    image: mysql:8.0
    container_name: mall-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mall_go
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - mall-network
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6.2-alpine
    container_name: mall-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  consul:
    image: consul:1.11
    container_name: mall-consul
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 业务服务
  user-service:
    build:
      context: ../../
      dockerfile: deployments/docker/user-service/Dockerfile
      args:
        - GOPROXY=https://goproxy.cn,direct
    container_name: mall-user-service
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      consul:
        condition: service_healthy
    ports:
      - "8001:8001"
    environment:
      - CONFIG_PATH=/app/configs/config.yml
    volumes:
      - ../../services/user-service/configs:/app/configs
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-service:
    build:
      context: ../../
      dockerfile: deployments/docker/product-service/Dockerfile
      args:
        - GOPROXY=https://goproxy.cn,direct
    container_name: mall-product-service
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      consul:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - CONFIG_PATH=/app/configs/config.yml
    volumes:
      - ../../services/product-service/configs:/app/configs
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway-service:
    build:
      context: ../../
      dockerfile: deployments/docker/gateway-service/Dockerfile
      args:
        - GOPROXY=https://goproxy.cn,direct
    container_name: mall-gateway-service
    restart: always
    depends_on:
      consul:
        condition: service_healthy
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - CONFIG_PATH=/app/configs/config.yml
    volumes:
      - ../../services/gateway-service/configs:/app/configs
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mall-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  consul_data:
